<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sml.websockt.dao.UserDao">

    <resultMap id="findByConditionMap" type="com.sml.websockt.pojo.GroupName">
        <result column="id" property="id"></result>
        <!--<result column="user_id" property="userId"></result>-->
        <result column="group_name" property="groupName"></result>
        <collection property="userList" ofType="com.sml.websockt.pojo.User">
            <result column="id" property="id"></result>
            <result column="user_id" property="userId"></result>
            <result column="user_name" property="username"></result>
            <result column="description" property="description"></result>
        </collection>
    </resultMap>

    <sql id="Base_Column_List">
        user_id, user_name, password,description
    </sql>

    <select id="findByLogin" resultType="com.sml.websockt.pojo.User" parameterType="com.sml.websockt.pojo.User">
        select id,user_id, user_name,description from t_user where user_id=#{userId} and password=#{password}
    </select>

    <select id="findByUserId" parameterType="String" resultType="com.sml.websockt.pojo.User">
        select
          user_id, user_name,description
        from t_user where user_id=#{userId}
    </select>

    <select id="findByCurUserList" parameterType="com.sml.websockt.pojo.User" resultType="com.sml.websockt.pojo.User">
        SELECT id,user_id, user_name,description FROM t_user
        <where>
            <if test="userId != null and userId != ''">
                user_id IN (SELECT user_id FROM t_relation WHERE friend_id=#{userId})
            </if>
            <if test="username != null and username !=''">
                and (user_id like '%${username}%' or user_name like '%${username}%')
            </if>
        </where>
    </select>

    <select id="findByCondition" parameterType="com.sml.websockt.pojo.User" resultType="com.sml.websockt.pojo.User">
        select id,user_id, user_name,description from t_user
        <where>
            <if test="id>0">
                and id=#{id}
            </if>
            <if test="userId != null and userId !=''">
                and user_id like '%${userId}%'
            </if>
            <if test="username != null and username !=''">
                and user_name like '%${username}%'
            </if>
            <if test="description != null and description !=''">
                and description like '%${description}%'
            </if>
        </where>
    </select>

    <insert id="insert" parameterType="com.sml.websockt.pojo.User">
        insert into t_user (user_id, user_name, password,description)
        values (#{userId}, #{username}, #{password},#{description})
    </insert>

    <insert id="insertGroup" parameterType="com.sml.websockt.pojo.GroupName">
        INSERT INTO t_group_name (`group_name`, `user_id`)VALUES(#{groupName},#{userId});
    </insert>

    <select id="getFriendList" parameterType="com.sml.websockt.pojo.User" resultMap="findByConditionMap">
      SELECT g.id,g.group_name,u.user_name,u.user_id,u.description FROM
      t_relation r
      LEFT JOIN
      t_group_name g ON r.group_id=g.id
      LEFT JOIN t_user u ON u.user_id=r.friend_id
      WHERE r.user_id=#{userId}
    </select>

    <select id="isFriend" parameterType="com.sml.websockt.pojo.Relation" resultType="com.sml.websockt.pojo.User">
        SELECT * FROM  t_user u WHERE u.user_id IN
        (SELECT r.friend_id FROM t_relation r  WHERE r.friend_id=#{friendId} AND r.user_id=#{userId})
    </select>

    <select id="queryGroupNameByUserId" parameterType="com.sml.websockt.pojo.User" resultType="com.sml.websockt.pojo.GroupName">
        select  * from t_group_name where group_name='我的好友' and user_id=#{userId}
    </select>

    <insert id="addFriend" parameterType="com.sml.websockt.pojo.Relation">
        insert into t_relation (user_id,friend_id,group_id) values (#{userId},#{friendId},#{groupId});
    </insert>

    <delete id="delFriend" parameterType="com.sml.websockt.pojo.Relation">
          delete from t_relation where user_id=#{userId} and friend_id=#{friendId}
    </delete>
</mapper>